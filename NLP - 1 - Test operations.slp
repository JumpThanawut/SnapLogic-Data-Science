{
    "class_id": "com-snaplogic-pipeline",
    "class_version": 8,
    "link_map": {
        "link100": {
            "dst_id": "11111111-1111-1111-1111-000000000001",
            "dst_view_id": "input0",
            "src_id": "11111111-1111-1111-1111-000000000000",
            "src_view_id": "output0"
        }
    },
    "property_map": {
        "error": {
            "error_behavior": {
                "value": "none"
            }
        },
        "info": {
            "author": {
                "value": "jumpthanawut@snaplogic.com"
            },
            "label": {},
            "notes": {
                "value": null
            },
            "pipeline_doc_uri": {
                "value": null
            },
            "purpose": {
                "value": null
            }
        },
        "input": {},
        "output": {
            "11111111-1111-1111-1111-000000000001_output0": {
                "label": {
                    "value": "Remote Python Script Snap - output0"
                },
                "view_type": {
                    "value": "document"
                }
            }
        },
        "settings": {
            "error_param_table": {
                "value": []
            },
            "error_pipeline": {
                "expression": false,
                "value": null
            },
            "imports": {
                "value": []
            },
            "param_table": {
                "value": []
            }
        }
    },
    "render_map": {
        "default_snaplex": null,
        "detail_map": {
            "11111111-1111-1111-1111-000000000000": {
                "error": {},
                "grid_x_int": 2,
                "grid_y_int": 1,
                "index": null,
                "input": {},
                "output": {},
                "recommendation_id": null,
                "rot_int": 0,
                "rot_tail_int": 0,
                "source": ""
            },
            "11111111-1111-1111-1111-000000000001": {
                "error": {},
                "grid_x_int": 3,
                "grid_y_int": 1,
                "index": null,
                "input": {},
                "output": {},
                "recommendation_id": null,
                "rot_int": 0,
                "rot_tail_int": 0,
                "source": "snap catagory"
            }
        },
        "pan_x_num": 0,
        "pan_y_num": 0,
        "scale_ratio": 1
    },
    "snap_map": {
        "11111111-1111-1111-1111-000000000000": {
            "class_id": "com-snaplogic-snaps-transform-jsongenerator",
            "class_version": 2,
            "instance_id": "11111111-1111-1111-1111-000000000000",
            "property_map": {
                "error": {
                    "error0": {
                        "label": {
                            "value": "error0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    },
                    "error_behavior": {
                        "value": "fail"
                    }
                },
                "info": {
                    "label": {
                        "value": "JSON Generator"
                    },
                    "notes": {
                        "value": null
                    }
                },
                "output": {
                    "output0": {
                        "label": {
                            "value": "output0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "settings": {
                    "arrayElementsAsDocuments": {
                        "value": true
                    },
                    "editable_content": {
                        "value": "[{\"operation\":\"part_of_speech_tagging\",\"text\":\"For decades, humans have been communicating with machines by writing code with specific rules so that machines can response to commands and perform tasks.\"},{\"operation\":\"noun_phrase_extraction\",\"text\":\"Chatbot accurately provides solutions to people 24/7. Virtual Assistants (Alexa, Google Assistant, Siri, Cortana, etc.) understand our voices and help us in a lot of things.\"},{\"operation\":\"sentiment_analysis\",\"text\":\"NLP is very useful and is now available in our daily life.\"},{\"operation\":\"tokenization\",\"text\":\"Natural Language Processing (NLP) is one of the hottest topics in Machine Learning.\"}]"
                    }
                },
                "view_serial": 100
            }
        },
        "11111111-1111-1111-1111-000000000001": {
            "class_id": "com-snaplogic-snaps-mlcore-remotepythonscript",
            "class_version": 1,
            "instance_id": "11111111-1111-1111-1111-000000000001",
            "property_map": {
                "account": {
                    "account_ref": {
                        "expression": false,
                        "value": {}
                    }
                },
                "error": {
                    "error0": {
                        "label": {
                            "value": "error0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    },
                    "error_behavior": {
                        "value": "fail"
                    }
                },
                "info": {
                    "label": {
                        "value": "Remote Python Script Snap"
                    },
                    "notes": {
                        "value": null
                    }
                },
                "input": {
                    "input0": {
                        "label": {
                            "value": "input0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "output": {
                    "output0": {
                        "label": {
                            "value": "output0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "settings": {
                    "editable_content": {
                        "value": "from snaplogic.tool import SLTool as slt\n\n# Ensure libraries.\nslt.ensure(\"nltk\", \"3.3\")\nslt.ensure(\"textblob\", \"0.15.1\")\n\n# Download NLTK corpora.\nimport textblob.download_corpora\ntextblob.download_corpora.main()\n\n\n# Imports\nfrom textblob import TextBlob\n\n\n# This function will be executed once before consuming the data.\ndef snaplogic_init():\n    return None\n\n\n# This function will be executed on each document from the upstream snap.\ndef snaplogic_process(row):\n    try:\n        operation = row[\"operation\"]\n        text = row[\"text\"]\n        text_obj = TextBlob(text)\n        result = None\n        if operation == \"part_of_speech_tagging\":\n            result = {\"tag\": text_obj.tags}\n        elif operation == \"noun_phrase_extraction\":\n            result = {\"noun\": text_obj.noun_phrases}\n        elif operation == \"sentiment_analysis\":\n            result = {\"polarity\": text_obj.sentiment.polarity, \"subjectivity\": text_obj.sentiment.subjectivity}\n        elif operation == \"tokenization\":\n            result = {\"word\": text_obj.words, \"sentence\": [str(x) for x in text_obj.sentences]}\n        else:\n            result = {\"error\": \"Operation \" + str(operation) + \" is not valid.\"}\n        return {\"result\": result}\n    except:\n        return {\"result\": {\"error\": \"The request is not valid.\"}}\n\n\n# This function will be executed after consuming all documents from the upstream snap.\ndef snaplogic_final():\n    return None"
                    }
                },
                "view_serial": 100
            }
        }
    }
}
